{"version":3,"sources":["worker.js","data/investments.js","first-round/Form.js","results/Ledger.js","results/Addition.js","data/givini.js","results/Givini.js","data/takkan.js","results/Takkan.js","results/index.js","Failure.js","first-round/index.js","Disclaimer.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","investments","price","profits","social","givini","chapter3Infrastructure","chapter1Steel","chapter1Bank","takkan","giviniStart","newGiviniScore","giviniExtra","reduce","acc","investment","previousInvestments","guildScore","map","filter","includes","length","possiblePrevious","initialValues","previous","remainingPron","baseProfit","strategy","startingSocial","merchantSolution","jhenno","magicalItems","mandatory","research","toSelectOptions","list","sort","value","label","requiredRule","required","message","CustomForm","onFinish","loading","useState","setPrevious","Form","useForm","form","setMerchantSolution","useEffect","getFieldValue","setFieldsValue","title","onValuesChange","_","allValues","className","type","Item","tooltip","rules","options","mode","valuePropName","Group","disabled","allInvestments","htmlType","nF","number","toLocaleString","numberColWidth","NumberCell","children","formattedNumber","format","Math","abs","Investments","dataSource","data","key","columns","dataIndex","sorter","a","b","localeCompare","render","width","pagination","Others","Ledger","initialStandings","nonInvestmentChanges","investmentChanges","sum","category","money","bordered","expandable","expandedRowRender","rowExpandable","defaultExpandAllRows","summary","Summary","Row","Cell","colSpan","Addition","startingValue","dataSources","index","scope","values","explanation","join","toString","val","preliminaryChanges","Boolean","baseValue","chapter3Investments","roundOneChanges","roundOneValue","Givini","roundOneInvestments","decisions","Takkan","Result","Failure","status","socialRequirement","setResult","runInWoker","setError","undefined","misc","giviniBaseValue","giviniRoundOneValue","nonInvestmentChangesList","params","otherRequirements","atLeastOne","result","FirstRound","error","Title","Typography","Disclaimer","href","description","showIcon","Loading","combinationsCount","progress","investmentsCount","preprogress","visible","centered","closable","footer","percent","round","App","workerInstance","setWorkerInstance","setLoading","setCombinationsCount","setProgress","setInvestmentsCount","setPreprogress","worker","terminate","prepare","i","preprocess","batchSize","ceil","end","min","process","clean","buildRunInWorker","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.265b036b.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"prepare\",\"preprocess\",\"process\",\"clean\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"1886301eacf32740c8c2.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","// Ref: https://thelastsovereign.miraheze.org/wiki/Investments\n\nconst investments = [\n  {\n    name: 'Bank of Stineford',\n    price: 400000,\n    profits: 240000,\n  },\n  {\n    name: 'Stineford Weapons Store',\n    price: 200000,\n    profits: 75000,\n  },\n  {\n    name: 'Trading Pillar Rights',\n    price: 300000,\n    profits: 100000,\n  },\n  {\n    name: 'Stineford Succubus Tower',\n    price: 800000,\n    social: 2,\n  },\n  {\n    name: 'Yhilini Airship Fleet',\n    price: 1000000,\n    profits: 100000,\n  },\n  {\n    name: \"Min's Trade Route\",\n    price: 400000,\n    profits: 185000,\n    givini: 1,\n  },\n  {\n    name: 'Yhilini Succubi Trade',\n    price: ({ chapter3Infrastructure }) =>\n      chapter3Infrastructure ? 400000 : 550000,\n    profits: 200000,\n  },\n  {\n    name: 'Yhilini Brothel Reform',\n    price: 25000,\n    profits: 35000,\n  },\n  {\n    name: 'Premium Steel Owner',\n    price: ({ chapter1Steel }) => (!!chapter1Steel ? 75000 : 100000),\n    profits: 10000,\n  },\n  {\n    name: 'Yhilini Bank Core Lender',\n    price: ({ chapter1Bank }) => (!!chapter1Bank ? 450000 : 500000),\n    profits: 150000,\n  },\n  {\n    name: 'Mercenary Offices',\n    price: ({ chapter3Infrastructure }) =>\n      chapter3Infrastructure ? 150000 : 250000,\n    profits: 15000,\n    social: 2,\n  },\n  {\n    name: 'Theltiar Rentals',\n    price: 425000,\n    profits: 95000,\n    social: 1,\n  },\n  {\n    name: 'Theltiar Flowhouse',\n    price: 250000,\n    profits: 80000,\n  },\n  {\n    name: 'Denmiel Mushrooms',\n    price: 105000,\n    profits: 40000,\n  },\n  {\n    name: 'Denmiel Archives',\n    price: 250000,\n    profits: 20000,\n    social: 1,\n  },\n  {\n    name: 'Eustrin Guild',\n    price: 600000,\n    profits: 250000,\n  },\n  {\n    name: 'Succubus Armorer',\n    price: 100000,\n    profits: 10000,\n  },\n  {\n    name: 'Gasm Falls Trade',\n    price: 275000,\n    profits: 110000,\n  },\n  {\n    name: 'Givini Tunnels',\n    price: 1500000,\n    profits: 300000,\n    givini: 3,\n    takkan: 3,\n  },\n  {\n    name: 'Lustlord Temples',\n    price: 50000 + 750000,\n    profits: 50000,\n  },\n  {\n    name: 'Succubus Band Tour',\n    price: 100000,\n    profits: 2000,\n    givini: 2,\n    social: 1,\n    takkan: 2,\n  },\n  {\n    name: 'Gasm Falls Water Cleanup',\n    price: 250000,\n    social: 1,\n  },\n  {\n    name: 'Orc Tunnels',\n    price: 200000,\n    social: 1,\n  },\n  {\n    name: 'Givini Smithing',\n    price: 200000,\n    profits: 10000,\n    givini: 2,\n  },\n  {\n    name: 'Givini Orc Merchant',\n    price: ({ giviniStart: newGiviniScore = 0 }) => {\n      if (newGiviniScore < 20) {\n        return 100000;\n      }\n      if (newGiviniScore < 25) {\n        return 200000;\n      }\n      if (newGiviniScore < 35) {\n        return 300000;\n      }\n      if (newGiviniScore < 45) {\n        return 400000;\n      }\n      return 500000;\n    },\n    profits: ({ giviniStart = 0, giviniExtra = 0, investments }) => {\n      const newGiviniScore =\n        giviniStart +\n        giviniExtra +\n        investments.reduce((acc, investment) => {\n          return acc + (investment?.givini || 0);\n        }, 0);\n      if (newGiviniScore < 20) {\n        return 25000;\n      }\n      if (newGiviniScore < 30) {\n        return 50000;\n      }\n      if (newGiviniScore < 40) {\n        return 100000;\n      }\n      if (newGiviniScore < 50) {\n        return 150000;\n      }\n      return 200000;\n    },\n    givini: 5,\n  },\n  {\n    name: 'Givini Teahouse Chain',\n    price: 275000,\n    profits: 30000,\n    givini: 2,\n    social: 1,\n    takkan: 1,\n  },\n  {\n    name: 'Bank of Givini',\n    price: 350000,\n    profits: 300000,\n    givini: 5,\n    takkan: 2,\n  },\n  {\n    name: 'Givini Mage Guild',\n    price: 1000000,\n    profits: 40000,\n    givini: 5,\n  },\n  {\n    name: 'War Monument',\n    price: 1000000,\n    givini: 10,\n    social: 3,\n    takkan: 2,\n  },\n  {\n    name: \"Tarran'Kan Housing + Tarran'Kan Trade Upgrade\",\n    price: 1000000 + 100000,\n    profits: 50000 + 50000,\n    social: 1,\n    takkan: 5 + 2,\n  },\n  {\n    name: 'Hall of Mental Strength',\n    price: 200000,\n    profits: 25000,\n    social: 1,\n    takkan: 3,\n  },\n  {\n    name: 'Booze Shack',\n    price: 150000,\n    profits: 50000,\n    social: 1,\n    takkan: 2,\n  },\n  {\n    name: \"Tradesmasher's Guild\",\n    price: 350000,\n    profits: ({ investments, previousInvestments }) => {\n      const guildScore =\n        1 +\n        [...previousInvestments, ...investments.map(({ name }) => name)].filter(\n          (name) => {\n            return [\n              \"Cee'Kan Shipping\",\n              'Lonely Sailor Services',\n              'Givini Orc Merchant',\n              'Orcish Democracy',\n              'Orc Pools Upgrade',\n            ].includes(name);\n          }\n        ).length;\n\n      if (guildScore < 2) {\n        return 50000;\n      }\n      if (guildScore === 2) {\n        return 75000;\n      }\n      if (guildScore === 3) {\n        return 125000;\n      }\n      if (guildScore === 4) {\n        return 150000;\n      }\n      if (guildScore === 5) {\n        return 175000;\n      }\n      return 200000;\n    },\n    takkan: 5,\n  },\n  {\n    name: 'Lonely Sailor Services',\n    price: 250000,\n    profits: 100000,\n    social: 1,\n    takkan: 5,\n  },\n  {\n    name: \"Cee'Kan Shipping\",\n    price: 700000,\n    profits: 200000,\n    takkan: 5,\n  },\n  {\n    name: 'Orcish Democracy',\n    price: 1000000,\n    social: 5,\n    takkan: 10,\n  },\n  {\n    name: 'Imp Offices',\n    price: 100000,\n    social: 1,\n    takkan: 1,\n  },\n  {\n    name: 'Orc Pools Upgrade',\n    price: 500000,\n    social: 2,\n    takkan: 5,\n  },\n  {\n    name: 'Givini Banners + Givini Dragon Statue',\n    price: 1000 + 2500,\n    givini: 1,\n  },\n  {\n    name: 'Orcish Drake Statue + Orcish Gargoyle Statue + Orcish Golden Drake Statue',\n    price: 1000 + 2000 + 5000,\n    takkan: 1,\n  },\n];\n\nexport default investments;\n","import { Form, Select, InputNumber, Button, Card, Checkbox, Radio } from 'antd';\nimport { useEffect, useState } from 'react';\nimport allInvestments from '../data/investments';\n\nconst possiblePrevious = [\n  \"Min's Trade Route\",\n  'Yhilini Succubi Trade',\n  'Yhilini Bank Core Lender',\n  'Mercenary Offices',\n  'Theltiar Rentals',\n  'Theltiar Flowhouse',\n  'Denmiel Mushrooms',\n  'Denmiel Archives',\n  'Eustrin Guild',\n  'Gasm Falls Trade',\n  'Premium Steel Owner',\n];\n\nconst initialValues = {\n  previous: [\n    'Premium Steel Owner',\n    \"Min's Trade Route\",\n    'Yhilini Succubi Trade',\n    'Eustrin Guild',\n  ],\n  remainingPron: 5000,\n  baseProfit: 2000000,\n  chapter1Bank: true,\n  chapter1Steel: false,\n  strategy: 'social',\n  startingSocial: 34,\n  chapter3Infrastructure: true,\n  merchantSolution: 'wait',\n  jhenno: 'religion',\n  magicalItems: 'givini',\n  mandatory: [],\n  research: 'purity',\n};\n\nconst toSelectOptions = (list) => {\n  return [...list].sort().map((value) => {\n    return {\n      label: value,\n      value: value,\n    };\n  });\n};\n\nconst requiredRule = { required: true, message: `Please provide a value.` };\n\nconst CustomForm = ({ onFinish, loading }) => {\n  const [previous, setPrevious] = useState(initialValues.previous);\n\n  const [form] = Form.useForm();\n  const [merchantSolution, setMerchantSolution] = useState(\n    initialValues.merchantSolution\n  );\n  useEffect(() => {\n    if (\n      merchantSolution === 'neutral' &&\n      form.getFieldValue('strategy') === 'money'\n    ) {\n      form.setFieldsValue({ strategy: 'social' });\n    }\n  }, [form, merchantSolution]);\n  useEffect(() => {\n    form.setFieldsValue({\n      mandatory: form\n        .getFieldValue('mandatory')\n        .filter((name) => !previous.includes(name)),\n    });\n  }, [form, previous]);\n\n  return (\n    <Card title={`Round one`}>\n      <Form\n        initialValues={initialValues}\n        onFinish={onFinish}\n        onValuesChange={(_, allValues) => {\n          setPrevious(allValues.previous);\n          setMerchantSolution(allValues.merchantSolution);\n        }}\n        className=\"first-round-form\"\n        form={form}\n      >\n        <Card title={`The past`} type=\"inner\">\n          <div className=\"numbers\">\n            <Form.Item\n              label={`ProN remaining at the end of chapter 3`}\n              name=\"remainingPron\"\n              tooltip={`In the Calculator, go to \"War Investment Phase\" and copy the value next to \"ProN available\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n            <Form.Item\n              label={`Total profit at the start of chapter 4`}\n              name=\"baseProfit\"\n              tooltip={`In the Calculator, go to \"First Tower Run and Investment and copy the value next to \"Total ProN Return\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n            <Form.Item\n              label={`Your social standing at the start of chapter 4`}\n              name=\"startingSocial\"\n              tooltip={`In the Calculator, go to \"War Investment Phase\" and copy the value next to \"Social Score\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </div>\n\n          <Form.Item\n            label={`Investments already bought during chapters 2/3`}\n            name=\"previous\"\n          >\n            <Select\n              options={toSelectOptions(possiblePrevious)}\n              mode=\"multiple\"\n            />\n          </Form.Item>\n\n          <div className=\"checkboxes\">\n            {!previous.includes('Yhilini Bank Core Lender') && (\n              <Form.Item name=\"chapter1Bank\" valuePropName=\"checked\">\n                <Checkbox>{`You invested 25,000 ProN in the Yhilin Bank during chapter 1.`}</Checkbox>\n              </Form.Item>\n            )}\n            {!previous.includes('Premium Steel Owner') && (\n              <Form.Item name=\"chapter1Steel\" valuePropName=\"checked\">\n                <Checkbox>{`You invested 20,000 ProN in Premium Steel during chapter 1.`}</Checkbox>\n              </Form.Item>\n            )}\n            {!(\n              previous.includes('Yhilini Succubi Trade') &&\n              previous.includes('Mercenary Offices')\n            ) && (\n              <Form.Item name=\"chapter3Infrastructure\" valuePropName=\"checked\">\n                <Checkbox>{`You funded Yhilin Infrastructure during chapter 3.`}</Checkbox>\n              </Form.Item>\n            )}\n          </div>\n        </Card>\n\n        <Card title={`Strategy`} type=\"inner\">\n          <Form.Item\n            name=\"strategy\"\n            label={`Main strategy`}\n            rules={[requiredRule]}\n          >\n            <Radio.Group\n              options={[\n                {\n                  label: `Focus on profits; do only the bare minimum for the Ardan succession crisis (New Givini ≥ 25).`,\n                  value: 'money',\n                  disabled: merchantSolution === 'neutral',\n                },\n                {\n                  label: `Mix profits and social; reach most thresholds for the Ardan succession crisis (New Givini ≥ 25, Social ≥ 40).`,\n                  value: 'social',\n                },\n                {\n                  label: `Go all in on the Ardan succession crisis (New Givini ≥ 25, Social ≥ 40, dedicated investments).`,\n                  value: 'succession',\n                },\n              ]}\n            />\n          </Form.Item>\n          <div className=\"selects\">\n            <Form.Item label={`Research`} name=\"research\">\n              <Select\n                options={[\n                  {\n                    value: 'orc',\n                    label: `Orc Diversification`,\n                  },\n                  {\n                    value: 'unpeople',\n                    label: `Unpeople Transformation`,\n                  },\n                  {\n                    value: 'purity',\n                    label: `Purity Magic`,\n                  },\n                  {\n                    value: 'defense',\n                    label: `Base Defense`,\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item label={`Jhenno's cooperation`} name=\"jhenno\">\n              <Select\n                options={[\n                  {\n                    value: 'politics',\n                    label: `Politics`,\n                  },\n                  {\n                    value: 'religion',\n                    label: `Religion`,\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item label={`Rose's house magical items`} name=\"magicalItems\">\n              <Select\n                options={[\n                  {\n                    value: 'givini',\n                    label: `Givini`,\n                  },\n                  {\n                    value: 'takkan',\n                    label: `Tak'Kan`,\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item label={`Merchant dispute`} name=\"merchantSolution\">\n              <Select\n                options={[\n                  {\n                    value: 'neutral',\n                    label: `Neutral compromise (force Social ≥ 40)`,\n                  },\n                  {\n                    value: 'givini',\n                    label: `Favor New Givini`,\n                  },\n                  {\n                    value: 'wait',\n                    label: `Wait`,\n                  },\n                ]}\n              />\n            </Form.Item>\n          </div>\n          <Form.Item\n            label={`Investments you explicitly want to buy, for any reason`}\n            name=\"mandatory\"\n          >\n            <Select\n              options={toSelectOptions(\n                allInvestments\n                  .map(({ name }) => name)\n                  .filter((name) => !previous.includes(name))\n              )}\n              mode=\"multiple\"\n            />\n          </Form.Item>\n        </Card>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {`Submit`}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n};\n\nexport default CustomForm;\n","import { Table } from 'antd';\n\nconst nF = (number) => number.toLocaleString('en-US');\n\nconst numberColWidth = 120;\n\nconst NumberCell = ({ children, format }) => {\n  const number = children;\n  const formattedNumber = !!format ? nF(Math.abs(number)) : Math.abs(number);\n\n  return `${number < 0 ? `-` : `+`}${formattedNumber}`;\n};\n\nconst Investments = ({ investments }) => {\n  const dataSource = investments.map(({ name, ...data }) => {\n    return {\n      key: name,\n      name,\n      ...data,\n    };\n  });\n\n  const columns = [\n    {\n      title: `Name`,\n      dataIndex: 'name',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      render: (price) => nF(price),\n      sorter: (a, b) => a.price - b.price,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render: (profits) => nF(profits),\n      sorter: (a, b) => a.profits - b.profits,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render: (social = 0) => <NumberCell>{social}</NumberCell>,\n      width: numberColWidth,\n    },\n  ];\n\n  return <Table dataSource={dataSource} columns={columns} pagination={false} />;\n};\n\nconst Others = ({ list = [] }) => {\n  const dataSource = list.map(({ name, ...data }) => {\n    return {\n      key: name,\n      name,\n      ...data,\n    };\n  });\n\n  const render = (value = 0) => <NumberCell format={true}>{value}</NumberCell>;\n\n  const columns = [\n    {\n      title: `Name`,\n      dataIndex: 'name',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render,\n      width: numberColWidth,\n    },\n  ];\n\n  return <Table dataSource={dataSource} columns={columns} pagination={false} />;\n};\n\nconst Ledger = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n}) => {\n  const render = (value, { key }) => {\n    if (['base', 'total'].includes(key)) {\n      return nF(value);\n    }\n    return <NumberCell format={true}>{value}</NumberCell>;\n  };\n\n  const columns = [\n    {\n      dataIndex: 'category',\n    },\n    {\n      title: `ProN`,\n      dataIndex: 'money',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render,\n      width: numberColWidth,\n    },\n  ];\n\n  const sum = (key) =>\n    initialStandings[key] + nonInvestmentChanges[key] + investmentChanges[key];\n\n  const dataSource = [\n    {\n      ...initialStandings,\n      key: 'base',\n      category: `Previously`,\n    },\n    {\n      ...investmentChanges,\n      key: 'investments',\n      category: `Changes from investments`,\n      money: -investmentChanges.price,\n    },\n    {\n      ...nonInvestmentChanges,\n      key: 'other',\n      category: `Other changes`,\n    },\n  ];\n\n  return (\n    <Table\n      dataSource={dataSource}\n      columns={columns}\n      pagination={false}\n      bordered={true}\n      expandable={{\n        expandedRowRender: ({ key }) => {\n          if (key === 'investments') {\n            return <Investments investments={investmentChanges.investments} />;\n          }\n          if (key === 'other') {\n            return <Others list={nonInvestmentChanges.list} />;\n          }\n          return null;\n        },\n        rowExpandable: ({ key }) => ['investments', 'other'].includes(key),\n        defaultExpandAllRows: true,\n      }}\n      summary={() => {\n        return (\n          <Table.Summary.Row>\n            <Table.Summary.Cell colSpan={2}>{`Result`}</Table.Summary.Cell>\n            <Table.Summary.Cell>\n              {nF(\n                initialStandings.money +\n                  nonInvestmentChanges.money -\n                  investmentChanges.price\n              )}\n            </Table.Summary.Cell>\n            <Table.Summary.Cell>{nF(sum('profits'))}</Table.Summary.Cell>\n            <Table.Summary.Cell>{sum('social')}</Table.Summary.Cell>\n          </Table.Summary.Row>\n        );\n      }}\n    />\n  );\n};\n\nexport default Ledger;\n","const Addition = ({ startingValue = 0, dataSources }) => {\n  return (\n    <table className=\"addition\">\n      <tbody>\n        <tr>\n          <td>{`Initial value`}</td>\n          <td>{startingValue}</td>\n          <td></td>\n        </tr>\n      </tbody>\n      {dataSources.map(({ title, dataSource }, index) => {\n        return (\n          <tbody key={index.toString()}>\n            <tr>\n              <th colSpan=\"3\" scope=\"col\">\n                {title}\n              </th>\n            </tr>\n            {dataSource.map(({ label, values, explanation }, index) => {\n              return (\n                <tr key={index.toString()}>\n                  <td>{label}</td>\n                  <td>{values.map((value) => `+${value}`).join(' ')}</td>\n                  <td>{explanation}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        );\n      })}\n      <tfoot>\n        <tr>\n          <th scope=\"row\">{`Total`}</th>\n          <td>\n            {startingValue +\n              dataSources.reduce(\n                (acc, { dataSource }) =>\n                  acc +\n                  dataSource.reduce(\n                    (acc, { values }) =>\n                      acc + values.reduce((acc, val) => acc + val),\n                    0\n                  ),\n                0\n              )}\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default Addition;\n","const sum = (list) =>\n  list.reduce(\n    (acc, { values }) => acc + values.reduce((acc, value) => acc + value, 0),\n    0\n  );\n\nexport const startingValue = -5;\n\nexport const preliminaryChanges = ({ investments }) => {\n  return [\n    { label: `Petitions`, values: [5, 5, 2, 2, 2] },\n    {\n      label: `New Givini Trade`,\n      values: [5, 1],\n      explanation: `+5 when bought, +1 at the start of the round`,\n    },\n    investments.includes(\"Min's Trade Route\") && {\n      label: `Min's Trade Route`,\n      values: [1],\n    },\n  ].filter(Boolean);\n};\n\nexport const baseValue = ({ chapter3Investments }) =>\n  startingValue + sum(preliminaryChanges({ investments: chapter3Investments }));\n\nexport const roundOneChanges = ({ merchantSolution, magicalItems }) => {\n  return [\n    magicalItems === 'givini' && {\n      label: `House Rose's magical items: Givini`,\n      values: [2],\n    },\n    merchantSolution === 'neutral' && {\n      label: `Merchant dispute: Neutral compromise`,\n      values: [1],\n    },\n    merchantSolution === 'givini' && {\n      label: `Merchant dispute: Favor New Givini`,\n      values: [2],\n    },\n    { label: `Givino Vinai equipment shop girl`, values: [1] },\n    { label: `Givini king`, values: [1] },\n    {\n      label: `New Givini Trade`,\n      values: [1],\n      explanation: `+1 at the end of the round (before profits from the Givini Orc Merchant are computed)`,\n    },\n  ].filter(Boolean);\n};\n\nexport const roundOneValue = (...params) => sum(roundOneChanges(...params));\n","import Addition from './Addition';\nimport {\n  startingValue,\n  preliminaryChanges,\n  roundOneChanges,\n} from '../data/givini';\n\nconst Givini = ({\n  chapter3Investments = [],\n  roundOneInvestments = [],\n  decisions = {},\n}) => {\n  return (\n    <Addition\n      startingValue={startingValue}\n      dataSources={[\n        {\n          title: `Chapter start`,\n          dataSource: preliminaryChanges({ investments: chapter3Investments }),\n        },\n        {\n          title: `Investments`,\n          dataSource: roundOneInvestments\n            .filter(({ givini = 0 }) => givini !== 0)\n            .map(({ name, givini }) => {\n              return { label: name, values: [givini] };\n            })\n            .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n        },\n        {\n          title: `Other changes`,\n          dataSource: roundOneChanges(decisions),\n        },\n      ]}\n    />\n  );\n};\n\nexport default Givini;\n","export const startingValue = -5;\n\nexport const preliminaryChanges = () => {\n  return [\n    { label: `Petitions`, values: [5, 2, 2, 5] },\n    {\n      label: `Tak'Kan Trade`,\n      values: [5, 1],\n      explanation: `+5 when bought, +1 at the start of the round`,\n    },\n  ];\n};\n\nexport const roundOneChanges = ({ magicalItems, research }) => {\n  return [\n    magicalItems === 'takkan' && {\n      label: `House Rose's magical items: Tak'Kan`,\n      values: [2],\n    },\n    {\n      label: `Tak'Kan Trade`,\n      values: [1],\n      explanation: `+1 at the end of the round`,\n    },\n    research === 'orc' && {\n      label: `Research: Orc Diversification`,\n      values: [5],\n    },\n  ].filter(Boolean);\n};\n","import Addition from './Addition';\nimport {\n  startingValue,\n  preliminaryChanges,\n  roundOneChanges,\n} from '../data/takkan';\n\nconst Takkan = ({ roundOneInvestments = [], decisions = {} }) => {\n  return (\n    <Addition\n      startingValue={startingValue}\n      dataSources={[\n        {\n          title: `Chapter start`,\n          dataSource: preliminaryChanges(),\n        },\n        {\n          title: `Investments`,\n          dataSource: roundOneInvestments\n            .filter(({ takkan = 0 }) => takkan !== 0)\n            .map(({ name, takkan }) => {\n              return { label: name, values: [takkan] };\n            })\n            .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n        },\n        {\n          title: `Other changes`,\n          dataSource: roundOneChanges(decisions),\n        },\n      ]}\n    />\n  );\n};\n\nexport default Takkan;\n","import Ledger from './Ledger';\nimport { Card } from 'antd';\nimport Givini from './Givini';\nimport Takkan from './Takkan';\n\nconst Result = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n  decisions,\n}) => {\n  return (\n    <Card title={`Changes`} className=\"results\">\n      <Card title={`Ledger`} type=\"inner\" className=\"ledger\">\n        <Ledger\n          initialStandings={initialStandings}\n          nonInvestmentChanges={nonInvestmentChanges}\n          investmentChanges={investmentChanges}\n        />\n      </Card>\n      <Card title={`Countries`} type=\"inner\">\n        <Card title={`New Givini`} type=\"inner\">\n          <Givini\n            chapter3Investments={initialStandings.previousInvestments}\n            roundOneInvestments={investmentChanges.investments}\n            decisions={decisions}\n          />\n        </Card>\n        <Card title={`Tak'Kan`} type=\"inner\">\n          <Takkan\n            roundOneInvestments={investmentChanges.investments}\n            decisions={decisions}\n          />\n        </Card>\n      </Card>\n    </Card>\n  );\n};\n\nexport default Result;\n","import { Result, Card } from 'antd';\n\nconst Failure = ({ message }) => {\n  return (\n    <Card>\n      <Result status=\"warning\" title={message} />\n    </Card>\n  );\n};\n\nexport default Failure;\n","import { useState } from 'react';\nimport Form from './Form';\nimport Result from '../results';\nimport Failure from '../Failure';\nimport {\n  baseValue as giviniBaseValue,\n  roundOneValue as giviniRoundOneValue,\n} from '../data/givini';\n\nconst socialRequirement = ({\n  strategy,\n  startingSocial,\n  jhenno,\n  merchantSolution,\n}) => {\n  if (strategy === 'money') {\n    return 0;\n  }\n  if (jhenno === 'politics' && merchantSolution !== 'neutral') {\n    return 39 - startingSocial;\n  }\n  return 40 - startingSocial;\n};\n\nconst giviniRequirement = ({ giviniStart, giviniExtra }) => {\n  const absoluteRequirement = 25;\n  const offset = 3; // Points earned after the requirement matters\n\n  return absoluteRequirement - giviniStart - giviniExtra + offset;\n};\n\nconst onFinish = async ({ values, setResult, runInWoker, setError }) => {\n  setError(undefined);\n\n  const {\n    previous = [],\n    remainingPron,\n    baseProfit,\n    strategy,\n    startingSocial,\n    merchantSolution,\n    jhenno,\n    magicalItems,\n    mandatory,\n    research,\n    ...misc\n  } = values;\n\n  const decisions = { strategy, merchantSolution, magicalItems, research };\n\n  const giviniStart = giviniBaseValue({ chapter3Investments: previous });\n  const giviniExtra = giviniRoundOneValue(decisions);\n\n  const initialStandings = {\n    givini: giviniStart,\n    social: startingSocial,\n    money: remainingPron + baseProfit,\n    profits: baseProfit,\n    previousInvestments: previous,\n  };\n\n  const nonInvestmentChangesList = [\n    jhenno === 'politics' && {\n      name: `Jhenno's political cooperation`,\n      social: 1,\n    },\n    {\n      name: `Succession crisis' reward (best result)`,\n      social: 3,\n    },\n    {\n      name: `The Three Trades become less profitable`,\n      profits: -300000,\n    },\n  ].filter(Boolean);\n\n  const nonInvestmentChanges = {\n    givini: giviniExtra,\n    money: 0,\n    profits: nonInvestmentChangesList.reduce(\n      (acc, { profits = 0 }) => acc + profits,\n      0\n    ),\n    social: nonInvestmentChangesList.reduce(\n      (acc, { social = 0 }) => acc + social,\n      0\n    ),\n    list: nonInvestmentChangesList,\n  };\n\n  const params = {\n    previousInvestments: previous,\n    money: remainingPron + baseProfit,\n    otherRequirements: {\n      social: socialRequirement({\n        startingSocial,\n        strategy,\n        jhenno,\n        merchantSolution,\n      }),\n      givini: giviniRequirement({ giviniStart, giviniExtra }),\n      mandatory,\n      atLeastOne:\n        strategy === 'succession'\n          ? ['War Monument', 'Givini Mage Guild']\n          : undefined,\n    },\n    giviniStart,\n    giviniExtra,\n    ...misc,\n  };\n\n  const result = await runInWoker(params);\n\n  if (!result) {\n    setResult(undefined);\n    setError(\n      `Couldn't find a working combination of investments for that strategy with these starting values, sorry.`\n    );\n    return;\n  }\n\n  setResult({\n    initialStandings,\n    nonInvestmentChanges,\n    investmentChanges: result,\n    decisions,\n  });\n};\n\nconst FirstRound = ({ runInWoker, loading }) => {\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n\n  return (\n    <>\n      <Form\n        onFinish={(values) => {\n          onFinish({ values, setResult, runInWoker, setError });\n        }}\n        loading={loading}\n      />\n      {error && <Failure message={error} />}\n      {result && <Result {...result} />}\n    </>\n  );\n};\n\nexport default FirstRound;\n","import { Alert, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst Disclaimer = () => {\n  return (\n    <div className=\"disclaimer\">\n      <div className=\"preamble\">\n        <Title>{`Investment advisor`}</Title>\n        <p>\n          {`A tool to help you choose the best theoretical best possible investments for (the early steps of chapter 4 of) `}\n          <a href=\"https://the-last-sovereign.blogspot.com/\">{`The Last Sovereign`}</a>\n          {`.`}\n        </p>\n        <p>{`Just fill in the requested information, choose your strategy and let a quasi-brute force algorithm determine what's best for you (assuming a definition of best here as highest short term returns, then lowest price, while still fulfilling the requirements of your strategy).`}</p>\n        <p>\n          {`This is definetely an advanced tool, intended for people who are already familiar with the game's `}\n          <a href=\"https://thelastsovereign.miraheze.org/wiki/Secret_stats\">\n            {`inner workings`}\n          </a>\n          {`, with the awesome `}\n\n          <a href=\"https://thelastsovereign.flarum.cloud/d/15-calculator\">{`Calculator`}</a>\n          {`, and are now looking for the last lousy optimizations they might have missed.`}\n        </p>\n      </div>\n      <Alert\n        message={`Assumptions`}\n        description={\n          <>\n            <span>{`This tool takes for granted that:`}</span>\n            <ol>\n              <li>{`The Succubus Tower was visited during chapter 1.`}</li>\n              <li>{`AriGarda was bribed during chapter 2.`}</li>\n              <li>{`Tradesmasher and the Succubus Armorer were met during chapter 3.`}</li>\n              <li>{`The three unique Trades (New Givini, Tak'Kan and Chalice States) were bought at the end of chapter 3.`}</li>\n              <li>{`Chapter 3 in general was good enough for Yhilin to reach its final state during the first investment phase of Chapter 4.`}</li>\n              <li>{`Chapter 3 in general and the war in particular were good enough for all petitions favorable to Givini to appear.`}</li>\n              <li>{`All such petitions were approved.`}</li>\n              <li>{`If purchased, the Givini Orc Merchant is bought before any other investment of the round.`}</li>\n            </ol>\n          </>\n        }\n        type=\"info\"\n        showIcon\n      />\n    </div>\n  );\n};\n\nexport default Disclaimer;\n","import { Progress, Divider, Modal } from 'antd';\n\nconst Loading = ({\n  combinationsCount,\n  progress,\n  investmentsCount,\n  preprogress,\n}) => {\n  if (!investmentsCount) {\n    return null;\n  }\n\n  return (\n    <Modal visible={true} centered={true} closable={false} footer={null}>\n      <div>\n        <p>\n          {`Prefiltering ${(2 ** investmentsCount).toLocaleString('en-US')} (2`}\n          <sup>{investmentsCount}</sup>\n          {`) possibilities…`}\n        </p>\n        <Progress percent={Math.round(preprogress * 100)} />\n      </div>\n      {!!combinationsCount && (\n        <>\n          <Divider />\n          <div>\n            <p>{`Processing ${combinationsCount.toLocaleString(\n              'en-US'\n            )} remaining possibilities…`}</p>\n            <Progress percent={Math.round(progress * 10000) / 100} />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default Loading;\n","import './App.css';\nimport FirstRound from './first-round';\nimport { useEffect, useState } from 'react';\nimport worker from 'workerize-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport Disclaimer from './Disclaimer';\nimport Loading from './Loading';\n\nconst buildRunInWorker =\n  ({\n    workerInstance,\n    setLoading,\n    setCombinationsCount,\n    setProgress,\n    setInvestmentsCount,\n    setPreprogress,\n  }) =>\n  async (params) => {\n    setLoading(true);\n\n    const investmentsCount = await workerInstance.prepare(params);\n    setInvestmentsCount(investmentsCount);\n    setPreprogress(0);\n    let combinationsCount = 0;\n    for (let i = 0; i <= investmentsCount; i++) {\n      combinationsCount += await workerInstance.preprocess();\n      setPreprogress(i / investmentsCount);\n    }\n\n    setCombinationsCount(combinationsCount);\n    setProgress(0);\n    const batchSize = 10000;\n    let result;\n    for (let i = 0; i < Math.ceil(combinationsCount / batchSize); i++) {\n      const end = Math.min((i + 1) * batchSize, combinationsCount);\n      result = await workerInstance.process(i * batchSize, end);\n      setProgress(end / combinationsCount);\n    }\n\n    await workerInstance.clean();\n\n    setLoading(false);\n    setCombinationsCount(undefined);\n    setInvestmentsCount(undefined);\n    setProgress(0);\n    setPreprogress(0);\n\n    return result;\n  };\n\nconst App = () => {\n  const [workerInstance, setWorkerInstance] = useState();\n  const [loading, setLoading] = useState(false);\n  const [combinationsCount, setCombinationsCount] = useState();\n  const [progress, setProgress] = useState(0);\n  const [investmentsCount, setInvestmentsCount] = useState();\n  const [preprogress, setPreprogress] = useState(0);\n\n  useEffect(() => {\n    if (!workerInstance) {\n      setWorkerInstance(worker());\n    }\n\n    return () => {\n      workerInstance?.terminate();\n    };\n  }, [workerInstance]);\n\n  if (!workerInstance) {\n    return null;\n  }\n\n  const runInWoker = buildRunInWorker({\n    workerInstance,\n    setLoading,\n    setCombinationsCount,\n    setProgress,\n    setInvestmentsCount,\n    setPreprogress,\n  });\n\n  return (\n    <div>\n      <Disclaimer />\n      <FirstRound runInWoker={runInWoker} loading={loading} />\n      {loading && (\n        <Loading\n          combinationsCount={combinationsCount}\n          progress={progress}\n          preprogress={preprogress}\n          investmentsCount={investmentsCount}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}