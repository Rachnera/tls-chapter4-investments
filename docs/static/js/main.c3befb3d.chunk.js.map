{"version":3,"sources":["worker.js","data/investments.js","components/form/Banned.js","first-round/Form.js","misc.js","results/Ledger.js","results/Addition.js","data/givini.js","first-round/results/Givini.js","data/takkan.js","first-round/results/Takkan.js","first-round/results/index.js","first-round/index.js","Disclaimer.js","Loading.js","Failure.js","second-round/Headquarters.js","second-round/Form.js","second-round/results/Givini.js","second-round/results/Takkan.js","second-round/results/index.js","second-round/index.js","App.js","reportWebVitals.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","investments","price","profits","social","givini","chapter3Infrastructure","chapter1Steel","takkan","giviniStart","newGiviniScore","giviniExtra","reduce","acc","investment","previousInvestments","guildScore","map","filter","includes","length","CustomForm","mandatory","form","useEffect","setFieldsValue","banned","getFieldValue","Item","label","tooltip","options","allInvestments","value","mode","Title","Typography","possiblePrevious","initialValues","previous","remainingPron","baseProfit","strategy","startingSocial","merchantSolution","jhenno","magicalItems","research","toSelectOptions","list","sort","requiredRule","required","message","onFinish","loading","Form","useForm","useState","setPrevious","setMandatory","setMerchantSolution","onValuesChange","_","allValues","className","level","rules","valuePropName","title","Group","disabled","Banned","type","htmlType","buildFinalStandings","initialStandings","investmentChanges","nonInvestmentChanges","finalStandings","forEach","key","money","nF","number","toLocaleString","numberColWidth","NumberCell","children","formattedNumber","format","Math","abs","Investments","dataSource","data","columns","dataIndex","sorter","a","b","localeCompare","render","width","pagination","Others","Ledger","sum","extraProfits","category","otherList","bordered","expandable","expandedRowRender","rowExpandable","defaultExpandAllRows","summary","Summary","Row","Cell","colSpan","Addition","startingValue","dataSources","index","scope","values","explanation","join","toString","val","preliminaryChanges","Boolean","baseValue","chapter3Investments","roundOneChanges","roundOneValue","roundTwoChanges","merchantSolution2","roundTwoValue","Givini","roundOneInvestments","decisions","Takkan","Result","socialRequirement","buildNonInvestmentsChange","nonInvestmentChangesList","giviniRoundOneValue","takkanRoundOneValue","compute","runInWoker","misc","params","otherRequirements","atLeastOne","undefined","setResult","setError","giviniBaseValue","result","FirstRound","resultRef","useRef","current","scrollIntoView","behavior","ref","Disclaimer","href","description","showIcon","Loading","combinationsCount","progress","investmentsCount","preprogress","abort","visible","centered","closable","footer","percent","round","danger","icon","PoweroffOutlined","onClick","Failure","status","magic","military","defense","subsitute","plus","renderPlus","extra","flat","Headquarters","source","headquarters","orcCouncil","firstRoundDecisions","purchasedInvestments","militaryExtra","setMilitaryExtra","previousResearch","headquartersPrice","roundTwoInvestments","Text","roundOneResearch","takkanScore","councilResult","researches","yes","no","council","toFixed","roundOneDecisions","initialSocial","firstRoundResult","headquartersUpgradesPrice","giviniRoundTwoValue","completedResearch","SecondRound","dumbCache","dumbKey","JSON","stringify","App","workerInstance","setWorkerInstance","setLoading","setCombinationsCount","setProgress","setInvestmentsCount","setPreprogress","setFirstRoundResult","secondRoundResult","setSecondRoundResult","error","worker","terminate","cacheKey","prepare","i","preprocess","batchSize","ceil","end","min","process","clean","buildRunInWorker","newWorkerInstance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3befb3d.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"prepare\",\"preprocess\",\"process\",\"clean\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"68d0039099c8097b13fb.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","// Ref: https://thelastsovereign.miraheze.org/wiki/Investments\n\nconst investments = [\n  {\n    name: 'Bank of Stineford',\n    price: 400000,\n    profits: 240000,\n  },\n  {\n    name: 'Stineford Weapons Store',\n    price: 200000,\n    profits: 75000,\n  },\n  {\n    name: 'Trading Pillar Rights',\n    price: 300000,\n    profits: 100000,\n  },\n  {\n    name: 'Stineford Succubus Tower',\n    price: 800000,\n    social: 2,\n  },\n  {\n    name: 'Yhilini Airship Fleet',\n    price: 1000000,\n    profits: 100000,\n  },\n  {\n    name: \"Min's Trade Route\",\n    price: 400000,\n    profits: 185000,\n    givini: 1,\n  },\n  {\n    name: 'Yhilini Succubi Trade',\n    price: ({ chapter3Infrastructure }) =>\n      chapter3Infrastructure ? 400000 : 550000,\n    profits: 200000,\n  },\n  {\n    name: 'Yhilini Brothel Reform',\n    price: 25000,\n    profits: 35000,\n  },\n  {\n    name: 'Premium Steel Owner',\n    price: ({ chapter1Steel }) => (!!chapter1Steel ? 75000 : 100000),\n    profits: 10000,\n  },\n  {\n    name: 'Yhilini Bank Core Lender',\n    price: 450000,\n    profits: 150000,\n  },\n  {\n    name: 'Mercenary Offices',\n    price: ({ chapter3Infrastructure }) =>\n      chapter3Infrastructure ? 150000 : 250000,\n    profits: 15000,\n    social: 2,\n  },\n  {\n    name: 'Theltiar Rentals',\n    price: 425000,\n    profits: 95000,\n    social: 1,\n  },\n  {\n    name: 'Theltiar Flowhouse',\n    price: 250000,\n    profits: 80000,\n  },\n  {\n    name: 'Denmiel Mushrooms',\n    price: 105000,\n    profits: 40000,\n  },\n  {\n    name: 'Denmiel Archives',\n    price: 250000,\n    profits: 20000,\n    social: 1,\n  },\n  {\n    name: 'Eustrin Guild',\n    price: 600000,\n    profits: 250000,\n  },\n  {\n    name: 'Succubus Armorer',\n    price: 100000,\n    profits: 10000,\n  },\n  {\n    name: 'Gasm Falls Trade',\n    price: 275000,\n    profits: 110000,\n  },\n  {\n    name: 'Givini Tunnels',\n    price: 1500000,\n    profits: 300000,\n    givini: 3,\n    takkan: 3,\n  },\n  {\n    name: 'Lustlord Statues + Lustlord Temples',\n    price: 50000 + 750000,\n    profits: 50000,\n  },\n  {\n    name: 'Succubus Band Tour',\n    price: 100000,\n    profits: 2000,\n    givini: 2,\n    social: 1,\n    takkan: 2,\n  },\n  {\n    name: 'Gasm Falls Water Cleanup',\n    price: 250000,\n    social: 1,\n  },\n  {\n    name: 'Orc Tunnels',\n    price: 200000,\n    social: 1,\n  },\n  {\n    name: 'Givini Smithing',\n    price: 200000,\n    profits: 10000,\n    givini: 2,\n  },\n  {\n    name: 'Givini Orc Merchant',\n    price: ({ giviniStart: newGiviniScore = 0 }) => {\n      if (newGiviniScore < 20) {\n        return 100000;\n      }\n      if (newGiviniScore < 25) {\n        return 200000;\n      }\n      if (newGiviniScore < 35) {\n        return 300000;\n      }\n      if (newGiviniScore < 45) {\n        return 400000;\n      }\n      return 500000;\n    },\n    profits: ({ giviniStart = 0, giviniExtra = 0, investments }) => {\n      const newGiviniScore =\n        giviniStart +\n        giviniExtra +\n        investments.reduce((acc, investment) => {\n          return acc + (investment?.givini || 0);\n        }, 0);\n      if (newGiviniScore < 20) {\n        return 25000;\n      }\n      if (newGiviniScore < 30) {\n        return 50000;\n      }\n      if (newGiviniScore < 40) {\n        return 100000;\n      }\n      if (newGiviniScore < 50) {\n        return 150000;\n      }\n      return 200000;\n    },\n    givini: 5,\n  },\n  {\n    name: 'Givini Teahouse Chain',\n    price: 275000,\n    profits: 30000,\n    givini: 2,\n    social: 1,\n    takkan: 1,\n  },\n  {\n    name: 'Bank of Givini',\n    price: 350000,\n    profits: 300000,\n    givini: 5,\n    takkan: 2,\n  },\n  {\n    name: 'Givini Mage Guild',\n    price: 1000000,\n    profits: 40000,\n    givini: 5,\n  },\n  {\n    name: 'War Monument',\n    price: 1000000,\n    givini: 10,\n    social: 3,\n    takkan: 2,\n  },\n  {\n    name: \"Tarran'Kan Housing + Tarran'Kan Trade Upgrade\",\n    price: 1000000 + 100000,\n    profits: 50000 + 50000,\n    social: 1,\n    takkan: 5 + 2,\n  },\n  {\n    name: 'Hall of Mental Strength',\n    price: 200000,\n    profits: 25000,\n    social: 1,\n    takkan: 3,\n  },\n  {\n    name: 'Booze Shack',\n    price: 150000,\n    profits: 50000,\n    social: 1,\n    takkan: 2,\n  },\n  {\n    name: \"Tradesmasher's Guild\",\n    price: 350000,\n    profits: ({ investments, previousInvestments = [] }) => {\n      const guildScore =\n        1 +\n        [...previousInvestments, ...investments.map(({ name }) => name)].filter(\n          (name) => {\n            return [\n              \"Cee'Kan Shipping\",\n              'Lonely Sailor Services',\n              'Givini Orc Merchant',\n              'Orcish Democracy',\n              'Orc Pools Upgrade',\n            ].includes(name);\n          }\n        ).length;\n\n      if (guildScore < 2) {\n        return 50000;\n      }\n      if (guildScore === 2) {\n        return 75000;\n      }\n      if (guildScore === 3) {\n        return 125000;\n      }\n      if (guildScore === 4) {\n        return 150000;\n      }\n      if (guildScore === 5) {\n        return 175000;\n      }\n      return 200000;\n    },\n    takkan: 5,\n  },\n  {\n    name: 'Lonely Sailor Services',\n    price: 250000,\n    profits: 100000,\n    social: 1,\n    takkan: 5,\n  },\n  {\n    name: \"Cee'Kan Shipping\",\n    price: 700000,\n    profits: 200000,\n    takkan: 5,\n  },\n  {\n    name: 'Orcish Democracy',\n    price: 1000000,\n    social: 5,\n    takkan: 10,\n  },\n  {\n    name: 'Imp Offices',\n    price: 100000,\n    social: 1,\n    takkan: 1,\n  },\n  {\n    name: 'Orc Pools Upgrade',\n    price: 500000,\n    social: 2,\n    takkan: 5,\n  },\n  {\n    name: 'Givini Banners + Givini Dragon Statue',\n    price: 1000 + 2500,\n    givini: 1,\n  },\n  {\n    name: 'Orcish Drake Statue + Orcish Gargoyle Statue + Orcish Golden Drake Statue',\n    price: 1000 + 2000 + 5000,\n    takkan: 1,\n  },\n];\n\nexport default investments;\n","import { Form, Select } from 'antd';\nimport allInvestments from '../../data/investments';\nimport { useEffect } from 'react';\n\nconst CustomForm = ({ mandatory, form }) => {\n  useEffect(() => {\n    form.setFieldsValue({\n      banned: form\n        .getFieldValue('banned')\n        .filter((name) => !mandatory.includes(name)),\n    });\n  }, [form, mandatory]);\n\n  return (\n    <Form.Item\n      label={`Investments you explicitly refuse to buy, for any reason`}\n      name=\"banned\"\n      tooltip={`For cases where a particular investment might be more of a curse than a blessing in the long run and you want to see what happens without it`}\n    >\n      <Select\n        options={allInvestments\n          .filter(({ name }) => !mandatory.includes(name))\n          .map(({ name }) => {\n            return {\n              label: name,\n              value: name,\n            };\n          })}\n        mode=\"multiple\"\n      />\n    </Form.Item>\n  );\n};\n\nexport default CustomForm;\n","import {\n  Form,\n  Select,\n  InputNumber,\n  Button,\n  Card,\n  Checkbox,\n  Radio,\n  Typography,\n} from 'antd';\nimport { useEffect, useState } from 'react';\nimport allInvestments from '../data/investments';\nimport Banned from '../components/form/Banned';\n\nconst { Title } = Typography;\n\nconst possiblePrevious = [\n  \"Min's Trade Route\",\n  'Yhilini Succubi Trade',\n  'Yhilini Bank Core Lender',\n  'Mercenary Offices',\n  'Theltiar Rentals',\n  'Theltiar Flowhouse',\n  'Denmiel Mushrooms',\n  'Denmiel Archives',\n  'Eustrin Guild',\n  'Gasm Falls Trade',\n  'Premium Steel Owner',\n];\n\nconst initialValues = {\n  previous: [\n    'Premium Steel Owner',\n    \"Min's Trade Route\",\n    'Yhilini Succubi Trade',\n    'Eustrin Guild',\n    'Denmiel Mushrooms',\n  ],\n  remainingPron: 7500,\n  baseProfit: 2435000,\n  chapter1Steel: false,\n  strategy: 'social',\n  startingSocial: 34,\n  chapter3Infrastructure: true,\n  merchantSolution: 'wait',\n  jhenno: 'religion',\n  magicalItems: 'givini',\n  mandatory: ['Givini Orc Merchant', 'Bank of Givini'],\n  research: 'purity',\n  banned: [],\n};\n\nconst toSelectOptions = (list) => {\n  return [...list].sort().map((value) => {\n    return {\n      label: value,\n      value: value,\n    };\n  });\n};\n\nconst requiredRule = { required: true, message: `Please provide a value.` };\n\nconst CustomForm = ({ onFinish, loading }) => {\n  const [form] = Form.useForm();\n\n  const [previous, setPrevious] = useState(initialValues.previous);\n  const [mandatory, setMandatory] = useState(initialValues.mandatory);\n  const [merchantSolution, setMerchantSolution] = useState(\n    initialValues.merchantSolution\n  );\n\n  useEffect(() => {\n    if (\n      merchantSolution === 'neutral' &&\n      form.getFieldValue('strategy') === 'money'\n    ) {\n      form.setFieldsValue({ strategy: 'social' });\n    }\n  }, [form, merchantSolution]);\n\n  useEffect(() => {\n    form.setFieldsValue({\n      mandatory: form\n        .getFieldValue('mandatory')\n        .filter((name) => !previous.includes(name)),\n    });\n  }, [form, previous]);\n\n  return (\n    <Form\n      initialValues={initialValues}\n      onFinish={onFinish}\n      onValuesChange={(_, allValues) => {\n        setPrevious(allValues.previous);\n        setMerchantSolution(allValues.merchantSolution);\n        setMandatory(allValues.mandatory);\n      }}\n      className=\"round-form first-round-form\"\n      form={form}\n    >\n      <div className=\"past-block\">\n        <Title level={2}>{`Chapters 1-3`}</Title>\n        <Card>\n          <div className=\"numbers\">\n            <Form.Item\n              label={`ProN remaining at the end of chapter 3`}\n              name=\"remainingPron\"\n              tooltip={`In the Calculator, go to \"War Investment Phase\" and copy the value next to \"ProN available\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n            <Form.Item\n              label={`Total profit at the start of chapter 4`}\n              name=\"baseProfit\"\n              tooltip={`In the Calculator, go to \"First Tower Run and Investment and copy the value next to \"Total ProN Return\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n            <Form.Item\n              label={`Your social standing at the start of chapter 4`}\n              name=\"startingSocial\"\n              tooltip={`In the Calculator, go to \"War Investment Phase\" and copy the value next to \"Social Score\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </div>\n\n          <Form.Item\n            label={`Investments already bought during chapters 2/3`}\n            name=\"previous\"\n          >\n            <Select\n              options={toSelectOptions(possiblePrevious)}\n              mode=\"multiple\"\n            />\n          </Form.Item>\n\n          <div className=\"checkboxes\">\n            {!previous.includes('Premium Steel Owner') && (\n              <Form.Item name=\"chapter1Steel\" valuePropName=\"checked\">\n                <Checkbox>{`You invested 20,000 ProN in Premium Steel during chapter 1.`}</Checkbox>\n              </Form.Item>\n            )}\n            {!(\n              previous.includes('Yhilini Succubi Trade') &&\n              previous.includes('Mercenary Offices')\n            ) && (\n              <Form.Item name=\"chapter3Infrastructure\" valuePropName=\"checked\">\n                <Checkbox>{`You funded Yhilin Infrastructure during chapter 3.`}</Checkbox>\n              </Form.Item>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      <Title level={2}>{`Chapter 4 – Round 1`}</Title>\n      <Card title={`Strategy`}>\n        <Form.Item name=\"strategy\" label={`Succession crisis`}>\n          <Radio.Group\n            options={[\n              {\n                label: `Focus on profits; do only the bare minimum for the Ardan succession crisis (New Givini ≥ 25).`,\n                value: 'money',\n                disabled: merchantSolution === 'neutral',\n              },\n              {\n                label: `Mix profits and social; reach most thresholds for the Ardan succession crisis (New Givini ≥ 25, Social ≥ 40).`,\n                value: 'social',\n              },\n              {\n                label: `Go all in on the Ardan succession crisis (New Givini ≥ 25, Social ≥ 40, dedicated investments).`,\n                value: 'succession',\n              },\n            ]}\n          />\n        </Form.Item>\n        <div className=\"selects\">\n          <Form.Item label={`Research`} name=\"research\">\n            <Select\n              options={[\n                {\n                  value: 'orc',\n                  label: `Orc Diversification`,\n                },\n                {\n                  value: 'unpeople',\n                  label: `Unpeople Transformation`,\n                },\n                {\n                  value: 'purity',\n                  label: `Purity Magic`,\n                },\n                {\n                  value: 'defense',\n                  label: `Base Defense`,\n                },\n              ]}\n            />\n          </Form.Item>\n          <Form.Item label={`Jhenno's cooperation`} name=\"jhenno\">\n            <Select\n              options={[\n                {\n                  value: 'politics',\n                  label: `Politics`,\n                },\n                {\n                  value: 'religion',\n                  label: `Religion`,\n                },\n              ]}\n            />\n          </Form.Item>\n          <Form.Item label={`Rose's house magical items`} name=\"magicalItems\">\n            <Select\n              options={[\n                {\n                  value: 'givini',\n                  label: `Givini`,\n                },\n                {\n                  value: 'takkan',\n                  label: `Tak'Kan`,\n                },\n              ]}\n            />\n          </Form.Item>\n          <Form.Item label={`Merchant dispute`} name=\"merchantSolution\">\n            <Select\n              options={[\n                {\n                  value: 'neutral',\n                  label: `Neutral compromise (force Social ≥ 40)`,\n                },\n                {\n                  value: 'givini',\n                  label: `Favor New Givini`,\n                },\n                {\n                  value: 'wait',\n                  label: `Wait`,\n                },\n              ]}\n            />\n          </Form.Item>\n        </div>\n\n        <Form.Item\n          label={`Investments you explicitly want to buy, for any reason`}\n          name=\"mandatory\"\n          tooltip={`Forcing a few certain investments can improve performances tremendously.`}\n        >\n          <Select\n            options={toSelectOptions(\n              allInvestments\n                .map(({ name }) => name)\n                .filter((name) => !previous.includes(name))\n            )}\n            mode=\"multiple\"\n          />\n        </Form.Item>\n        <Banned mandatory={[...previous, ...mandatory]} form={form} />\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {`Submit`}\n          </Button>\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n};\n\nexport default CustomForm;\n","export const buildFinalStandings = ({\n  initialStandings,\n  investmentChanges,\n  nonInvestmentChanges,\n}) => {\n  let finalStandings = {};\n\n  ['profits', 'givini', 'social', 'takkan'].forEach((key) => {\n    finalStandings[key] =\n      initialStandings[key] +\n      (investmentChanges[key] || 0) +\n      (nonInvestmentChanges[key] || 0);\n  });\n\n  finalStandings['investments'] = [\n    ...initialStandings.investments,\n    ...investmentChanges.investments.map(({ name }) => name),\n  ];\n\n  finalStandings['money'] =\n    initialStandings.money +\n    initialStandings.profits -\n    investmentChanges.price +\n    nonInvestmentChanges.money;\n\n  return finalStandings;\n};\n\nexport const nF = (number) => number.toLocaleString('en-US');\n","import { Table } from 'antd';\nimport { nF } from '../misc';\n\nconst numberColWidth = 120;\n\nconst NumberCell = ({ children, format }) => {\n  const number = children;\n  const formattedNumber = !!format ? nF(Math.abs(number)) : Math.abs(number);\n\n  return `${number < 0 ? `-` : `+`}${formattedNumber}`;\n};\n\nconst Investments = ({ investments }) => {\n  const dataSource = investments.map(({ name, ...data }) => {\n    return {\n      key: name,\n      name,\n      ...data,\n    };\n  });\n\n  const columns = [\n    {\n      title: `Name`,\n      dataIndex: 'name',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      render: (price) => nF(price),\n      sorter: (a, b) => a.price - b.price,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render: (profits) => nF(profits),\n      sorter: (a, b) => a.profits - b.profits,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render: (social = 0) => <NumberCell>{social}</NumberCell>,\n      width: numberColWidth,\n    },\n  ];\n\n  return <Table dataSource={dataSource} columns={columns} pagination={false} />;\n};\n\nconst Others = ({ list = [] }) => {\n  const dataSource = list.map(({ name, ...data }) => {\n    return {\n      key: name,\n      name,\n      ...data,\n    };\n  });\n\n  const render = (value = 0) => <NumberCell format={true}>{value}</NumberCell>;\n\n  const columns = [\n    {\n      title: `Name`,\n      dataIndex: 'name',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render,\n      width: numberColWidth,\n    },\n  ];\n\n  return <Table dataSource={dataSource} columns={columns} pagination={false} />;\n};\n\nconst Ledger = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n}) => {\n  const render = (value, { key }) => {\n    if (['base', 'total'].includes(key)) {\n      return nF(value);\n    }\n    return <NumberCell format={true}>{value}</NumberCell>;\n  };\n\n  const columns = [\n    {\n      dataIndex: 'category',\n    },\n    {\n      title: `ProN`,\n      dataIndex: 'money',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render,\n      width: numberColWidth,\n    },\n  ];\n\n  const sum = (key) =>\n    initialStandings[key] + nonInvestmentChanges[key] + investmentChanges[key];\n\n  const extraProfits =\n    investmentChanges.profits -\n    investmentChanges.investments.reduce(\n      (acc, { profits }) => acc + profits,\n      0\n    );\n\n  const dataSource = [\n    {\n      ...initialStandings,\n      key: 'base',\n      category: `Previously`,\n    },\n    {\n      key: 'previous_investments',\n      category: `Start of the round`,\n      money: initialStandings.profits,\n      profits: 0,\n      social: 0,\n    },\n    {\n      ...investmentChanges,\n      key: 'investments',\n      category: `Changes from new investments`,\n      money: -investmentChanges.price,\n      profits: investmentChanges.profits - extraProfits,\n    },\n    {\n      ...nonInvestmentChanges,\n      key: 'other',\n      category: `Other changes`,\n      profits: nonInvestmentChanges.profits + extraProfits,\n    },\n  ];\n\n  const otherList = (() => {\n    if (extraProfits > 0) {\n      return [\n        ...nonInvestmentChanges.list,\n        {\n          name: `Extra profits from past investments`,\n          profits: extraProfits,\n        },\n      ];\n    }\n\n    return nonInvestmentChanges.list;\n  })();\n\n  return (\n    <Table\n      dataSource={dataSource}\n      columns={columns}\n      pagination={false}\n      bordered={true}\n      expandable={{\n        expandedRowRender: ({ key }) => {\n          if (key === 'investments') {\n            return <Investments investments={investmentChanges.investments} />;\n          }\n          if (key === 'other') {\n            return <Others list={otherList} />;\n          }\n          return null;\n        },\n        rowExpandable: ({ key }) => {\n          if (key === 'investments') {\n            return true;\n          }\n\n          if (key === 'other' && !!nonInvestmentChanges.list?.length) {\n            return true;\n          }\n\n          return false;\n        },\n        defaultExpandAllRows: true,\n      }}\n      summary={() => {\n        return (\n          <Table.Summary.Row>\n            <Table.Summary.Cell\n              colSpan={2}\n            >{`Standings at the end of the round`}</Table.Summary.Cell>\n            <Table.Summary.Cell>\n              {nF(\n                initialStandings.money +\n                  initialStandings.profits +\n                  nonInvestmentChanges.money -\n                  investmentChanges.price\n              )}\n            </Table.Summary.Cell>\n            <Table.Summary.Cell>{nF(sum('profits'))}</Table.Summary.Cell>\n            <Table.Summary.Cell>{sum('social')}</Table.Summary.Cell>\n          </Table.Summary.Row>\n        );\n      }}\n      className=\"ledger\"\n    />\n  );\n};\n\nexport default Ledger;\n","const Addition = ({ startingValue = 0, dataSources }) => {\n  return (\n    <table className=\"addition\">\n      <tbody>\n        <tr>\n          <td>{`Initial value`}</td>\n          <td>{startingValue}</td>\n          <td></td>\n        </tr>\n      </tbody>\n      {dataSources\n        .filter(({ dataSource }) => dataSource.length > 0)\n        .map(({ title, dataSource }, index) => {\n          return (\n            <tbody key={index.toString()}>\n              <tr>\n                <th colSpan=\"3\" scope=\"col\">\n                  {title}\n                </th>\n              </tr>\n              {dataSource.map(({ label, values, explanation }, index) => {\n                return (\n                  <tr key={index.toString()}>\n                    <td>{label}</td>\n                    <td>{values.map((value) => `+${value}`).join(' ')}</td>\n                    <td>{explanation}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          );\n        })}\n      <tfoot>\n        <tr>\n          <th scope=\"row\">{`Total`}</th>\n          <td>\n            {startingValue +\n              dataSources.reduce(\n                (acc, { dataSource }) =>\n                  acc +\n                  dataSource.reduce(\n                    (acc, { values }) =>\n                      acc + values.reduce((acc, val) => acc + val),\n                    0\n                  ),\n                0\n              )}\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default Addition;\n","const sum = (list) =>\n  list.reduce(\n    (acc, { values }) => acc + values.reduce((acc, value) => acc + value, 0),\n    0\n  );\n\nexport const startingValue = -5;\n\nexport const preliminaryChanges = ({ investments }) => {\n  return [\n    { label: `Petitions`, values: [5, 5, 2, 2, 2] },\n    {\n      label: `New Givini Trade`,\n      values: [5],\n      explanation: `On purchase`,\n    },\n    investments.includes(\"Min's Trade Route\") && {\n      label: `Min's Trade Route`,\n      values: [1],\n    },\n  ].filter(Boolean);\n};\n\nexport const baseValue = ({ chapter3Investments }) =>\n  startingValue + sum(preliminaryChanges({ investments: chapter3Investments }));\n\nexport const roundOneChanges = ({ merchantSolution, magicalItems }) => {\n  return [\n    magicalItems === 'givini' && {\n      label: `House Rose's magical items: Givini`,\n      values: [2],\n    },\n    merchantSolution === 'neutral' && {\n      label: `Merchant dispute: Neutral compromise`,\n      values: [1],\n    },\n    merchantSolution === 'givini' && {\n      label: `Merchant dispute: Favor New Givini`,\n      values: [2],\n    },\n    { label: `Givino Vinai equipment shop girl`, values: [1] },\n    { label: `Givini king`, values: [1] },\n    {\n      label: `New Givini Trade`,\n      values: [1],\n      explanation: `At the end of the round (before profits from the Givini Orc Merchant are computed)`,\n    },\n  ].filter(Boolean);\n};\n\nexport const roundOneValue = (...params) => sum(roundOneChanges(...params));\n\nexport const roundTwoChanges = ({ merchantSolution2 }) => {\n  return [\n    merchantSolution2 === 'neutral' && {\n      label: `Merchant dispute: Neutral compromise`,\n      values: [1],\n    },\n    merchantSolution2 === 'givini' && {\n      label: `Merchant dispute: Favor New Givini`,\n      values: [2],\n    },\n    {\n      label: `New Givini Trade`,\n      values: [1],\n      explanation: `At the end of the round (before profits from the Givini Orc Merchant are computed)`,\n    },\n  ].filter(Boolean);\n};\n\nexport const roundTwoValue = (...params) => sum(roundTwoChanges(...params));\n","import Addition from '../../results/Addition';\nimport {\n  startingValue,\n  preliminaryChanges,\n  roundOneChanges,\n} from '../../data/givini';\n\nconst Givini = ({\n  chapter3Investments = [],\n  roundOneInvestments = [],\n  decisions = {},\n}) => {\n  return (\n    <Addition\n      startingValue={startingValue}\n      dataSources={[\n        {\n          title: `Chapter start`,\n          dataSource: preliminaryChanges({ investments: chapter3Investments }),\n        },\n        {\n          title: `Investments`,\n          dataSource: roundOneInvestments\n            .filter(({ givini = 0 }) => givini !== 0)\n            .map(({ name, givini }) => {\n              return { label: name, values: [givini] };\n            })\n            .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n        },\n        {\n          title: `Other changes`,\n          dataSource: roundOneChanges(decisions),\n        },\n      ]}\n    />\n  );\n};\n\nexport default Givini;\n","const sum = (list) =>\n  list.reduce(\n    (acc, { values }) => acc + values.reduce((acc, value) => acc + value, 0),\n    0\n  );\n\nexport const startingValue = -5;\n\nexport const preliminaryChanges = () => {\n  return [\n    { label: `Petitions`, values: [5, 2, 2, 5] },\n    {\n      label: `Tak'Kan Trade`,\n      values: [5],\n      explanation: `On purchase`,\n    },\n  ];\n};\n\nexport const baseValue = () => startingValue + sum(preliminaryChanges());\n\nexport const roundOneChanges = ({ magicalItems, research }) => {\n  return [\n    magicalItems === 'takkan' && {\n      label: `House Rose's magical items: Tak'Kan`,\n      values: [2],\n    },\n    {\n      label: `Tak'Kan Trade`,\n      values: [1],\n      explanation: `At the end of the round`,\n    },\n    research === 'orc' && {\n      label: `Research: Orc Diversification`,\n      values: [5],\n    },\n  ].filter(Boolean);\n};\n\nexport const roundOneValue = (...params) => sum(roundOneChanges(...params));\n\nexport const roundTwoChanges = () => {\n  return [\n    {\n      label: `Tak'Kan Trade`,\n      values: [1],\n      explanation: `At the end of the round`,\n    },\n  ];\n};\n\nexport const roundTwoValue = () => 1;\n\nexport const council = ({ investments = [], takkan, researches = [] }) => {\n  let yes = 3 + 1 + 1; //Base, Elleani, Impaler\n  let no = 2;\n\n  if (takkan >= 40) {\n    yes += 4;\n  } else if (takkan >= 30) {\n    yes += 3;\n    no += 1;\n  } else if (takkan >= 20) {\n    yes += 2;\n    no += 2;\n  } else if (takkan >= 10) {\n    yes += 1;\n    no += 3;\n  } else {\n    no += 4;\n  }\n\n  if (researches.includes('orc')) {\n    yes += 1;\n  } else {\n    no += 1;\n  }\n\n  yes += investments.filter((name) => {\n    return [\n      'Orc Pools Upgrade',\n      \"Tarran'Kan Housing + Tarran'Kan Trade Upgrade\",\n      'Hall of Mental Strength',\n      'Imp Offices',\n    ].includes(name);\n  }).length;\n\n  if (investments.includes('Orcish Democracy')) {\n    yes = +2;\n  }\n\n  return yes / (yes + no);\n};\n","import Addition from '../../results/Addition';\nimport {\n  startingValue,\n  preliminaryChanges,\n  roundOneChanges,\n} from '../../data/takkan';\n\nconst Takkan = ({ roundOneInvestments = [], decisions = {} }) => {\n  return (\n    <Addition\n      startingValue={startingValue}\n      dataSources={[\n        {\n          title: `Chapter start`,\n          dataSource: preliminaryChanges(),\n        },\n        {\n          title: `Investments`,\n          dataSource: roundOneInvestments\n            .filter(({ takkan = 0 }) => takkan !== 0)\n            .map(({ name, takkan }) => {\n              return { label: name, values: [takkan] };\n            })\n            .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n        },\n        {\n          title: `Other changes`,\n          dataSource: roundOneChanges(decisions),\n        },\n      ]}\n    />\n  );\n};\n\nexport default Takkan;\n","import Ledger from '../../results/Ledger';\nimport { Card } from 'antd';\nimport Givini from './Givini';\nimport Takkan from './Takkan';\n\nconst Result = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n  decisions,\n}) => {\n  return (\n    <Card title={`Changes`} className=\"results\">\n      <Ledger\n        initialStandings={initialStandings}\n        nonInvestmentChanges={nonInvestmentChanges}\n        investmentChanges={investmentChanges}\n      />\n      <div>\n        <Card title={`New Givini`} type=\"inner\">\n          <Givini\n            chapter3Investments={initialStandings.investments}\n            roundOneInvestments={investmentChanges.investments}\n            decisions={decisions}\n          />\n        </Card>\n        <Card title={`Tak'Kan`} type=\"inner\">\n          <Takkan\n            roundOneInvestments={investmentChanges.investments}\n            decisions={decisions}\n          />\n        </Card>\n      </div>\n    </Card>\n  );\n};\n\nexport default Result;\n","import Form from './Form';\nimport Result from './results';\nimport {\n  baseValue as giviniBaseValue,\n  roundOneValue as giviniRoundOneValue,\n} from '../data/givini';\nimport { buildFinalStandings } from '../misc';\nimport {\n  baseValue as takkanBaseValue,\n  roundOneValue as takkanRoundOneValue,\n} from '../data/takkan';\nimport { useEffect, useRef } from 'react';\n\nconst socialRequirement = (\n  startingSocial,\n  { strategy, jhenno, merchantSolution }\n) => {\n  if (strategy === 'money') {\n    return 0;\n  }\n  if (jhenno === 'politics' && merchantSolution !== 'neutral') {\n    return 39 - startingSocial;\n  }\n  return 40 - startingSocial;\n};\n\nconst giviniRequirement = ({ giviniStart, giviniExtra }) => {\n  const absoluteRequirement = 25;\n  const offset = 3; // Points earned after the requirement matters\n\n  return absoluteRequirement - giviniStart - giviniExtra + offset;\n};\n\nconst buildNonInvestmentsChange = (decisions) => {\n  const { jhenno } = decisions;\n\n  const nonInvestmentChangesList = [\n    jhenno === 'politics' && {\n      name: `Jhenno's political cooperation`,\n      social: 1,\n    },\n    {\n      name: `Succession crisis' reward (best result)`,\n      social: 3,\n    },\n    {\n      name: `The Three Trades become less profitable`,\n      profits: -300000,\n    },\n  ].filter(Boolean);\n\n  return {\n    givini: giviniRoundOneValue(decisions),\n    takkan: takkanRoundOneValue(decisions),\n    money: 0,\n    profits: nonInvestmentChangesList.reduce(\n      (acc, { profits = 0 }) => acc + profits,\n      0\n    ),\n    social: nonInvestmentChangesList.reduce(\n      (acc, { social = 0 }) => acc + social,\n      0\n    ),\n    list: nonInvestmentChangesList,\n  };\n};\n\nconst compute = async ({\n  runInWoker,\n  initialStandings,\n  decisions,\n  nonInvestmentChanges,\n  mandatory,\n  misc,\n  banned,\n}) => {\n  const giviniStart = initialStandings.givini;\n  const giviniExtra = nonInvestmentChanges.givini;\n\n  const params = {\n    ...misc,\n    previousInvestments: initialStandings.investments,\n    money: initialStandings.money + initialStandings.profits,\n    otherRequirements: {\n      social: socialRequirement(initialStandings.social, decisions),\n      givini: giviniRequirement({\n        giviniStart,\n        giviniExtra,\n      }),\n      mandatory,\n      atLeastOne:\n        decisions.strategy === 'succession'\n          ? ['War Monument', 'Givini Mage Guild']\n          : undefined,\n      banned,\n    },\n    giviniStart,\n    giviniExtra,\n  };\n\n  return runInWoker(params);\n};\n\nconst onFinish = async ({ values, setResult, runInWoker, setError }) => {\n  setError(undefined);\n\n  const {\n    previous = [],\n    remainingPron,\n    baseProfit,\n    startingSocial,\n\n    strategy,\n    merchantSolution,\n    jhenno,\n    magicalItems,\n    research,\n\n    mandatory,\n    banned,\n\n    chapter1Steel,\n    chapter3Infrastructure,\n  } = values;\n\n  const initialStandings = {\n    money: remainingPron,\n    profits: baseProfit,\n    investments: previous,\n    social: startingSocial,\n    givini: giviniBaseValue({ chapter3Investments: previous }),\n    takkan: takkanBaseValue(),\n  };\n\n  const decisions = {\n    strategy,\n    merchantSolution,\n    magicalItems,\n    research,\n    jhenno,\n  };\n\n  const misc = {\n    chapter1Steel,\n    chapter3Infrastructure,\n  };\n\n  const nonInvestmentChanges = buildNonInvestmentsChange(decisions);\n\n  const result = await compute({\n    runInWoker,\n    initialStandings,\n    decisions,\n    nonInvestmentChanges,\n    mandatory,\n    misc,\n    banned,\n  });\n\n  if (!result) {\n    setResult(undefined);\n    setError(\n      `Couldn't find a working combination of investments for that strategy with these starting values, sorry.`\n    );\n    return;\n  }\n\n  const investmentChanges = { ...result, money: -result.price };\n\n  setResult({\n    initialStandings,\n    decisions,\n    nonInvestmentChanges,\n    investmentChanges,\n    finalStandings: buildFinalStandings({\n      initialStandings,\n      nonInvestmentChanges,\n      investmentChanges,\n    }),\n    misc,\n  });\n  setError(undefined);\n};\n\nconst FirstRound = ({ runInWoker, loading, result, setResult, setError }) => {\n  const resultRef = useRef(null);\n  useEffect(() => {\n    if (!result || !resultRef.current) {\n      return;\n    }\n    resultRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, [result, resultRef]);\n\n  return (\n    <div className=\"round-one\">\n      <Form\n        onFinish={(values) => {\n          onFinish({ values, setResult, runInWoker, setError });\n        }}\n        loading={loading}\n      />\n      {result && (\n        <div ref={resultRef}>\n          <Result {...result} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FirstRound;\n","import { Alert, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst Disclaimer = () => {\n  return (\n    <div className=\"disclaimer\">\n      <div className=\"preamble\">\n        <Title>{`Investment Advisor`}</Title>\n        <p>\n          {`A tool to help you choose the best theoretical best possible investments for (the early steps of chapter 4 of) `}\n          <a href=\"https://the-last-sovereign.blogspot.com/\">{`The Last Sovereign`}</a>\n          {`.`}\n        </p>\n        <p>{`Just fill in the requested information, choose your strategy and let a quasi-brute force algorithm determine what's best for you (assuming a definition of best here as highest short term returns, then lowest price, while still fulfilling the requirements of your strategy).`}</p>\n        <p>\n          {`This is definetely an advanced tool, intended for people who are already familiar with the game's `}\n          <a href=\"https://thelastsovereign.miraheze.org/wiki/Secret_stats\">\n            {`inner workings`}\n          </a>\n          {`, with the awesome `}\n\n          <a href=\"https://thelastsovereign.flarum.cloud/d/15-calculator\">{`Calculator`}</a>\n          {`, and are now looking for the last lousy optimizations they might have missed.`}\n        </p>\n      </div>\n      <Alert\n        message={`Assumptions`}\n        description={\n          <>\n            <span>{`This tool takes for granted that:`}</span>\n            <ol>\n              <li>{`The Succubus Tower was visited during chapter 1.`}</li>\n              <li>{`Simon invested in the bank during chapter 1 (with Megail and Trin help).`}</li>\n              <li>{`AriGarda was bribed during chapter 2.`}</li>\n              <li>{`Tradesmasher and the Succubus Armorer were met during chapter 3.`}</li>\n              <li>{`The three unique Trades (New Givini, Tak'Kan and Chalice States) were bought at the end of chapter 3.`}</li>\n              <li>{`Chapter 3 in general was good enough for Yhilin to reach its final state during the first investment phase of Chapter 4.`}</li>\n              <li>{`Chapter 3 in general and the war in particular were good enough for all petitions favorable to Givini to appear.`}</li>\n              <li>{`All such petitions were approved.`}</li>\n              <li>{`If purchased, the Givini Orc Merchant is bought before any other investment of the round.`}</li>\n            </ol>\n          </>\n        }\n        type=\"info\"\n        showIcon\n      />\n    </div>\n  );\n};\n\nexport default Disclaimer;\n","import { Progress, Divider, Modal, Button } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\n\nconst Loading = ({\n  combinationsCount,\n  progress,\n  investmentsCount,\n  preprogress,\n  abort,\n}) => {\n  if (!investmentsCount) {\n    return null;\n  }\n\n  return (\n    <Modal visible={true} centered={true} closable={false} footer={null}>\n      <div>\n        <p>\n          {`Prefiltering ${(2 ** investmentsCount).toLocaleString('en-US')} (2`}\n          <sup>{investmentsCount}</sup>\n          {`) possibilities…`}\n        </p>\n        <Progress percent={Math.round(preprogress * 100)} />\n      </div>\n      {!!combinationsCount && (\n        <>\n          <Divider />\n          <div>\n            <p>{`Processing ${combinationsCount.toLocaleString(\n              'en-US'\n            )} remaining possibilities…`}</p>\n            <Progress percent={Math.round(progress * 10000) / 100} />\n          </div>\n        </>\n      )}\n      <Button\n        danger={true}\n        icon={<PoweroffOutlined />}\n        onClick={abort}\n        className=\"abort-button\"\n      >{`Abort`}</Button>\n    </Modal>\n  );\n};\n\nexport default Loading;\n","import { Result, Card } from 'antd';\n\nconst Failure = ({ message }) => {\n  return (\n    <Card>\n      <Result status=\"warning\" title={message} />\n    </Card>\n  );\n};\n\nexport default Failure;\n","import { Table } from 'antd';\nimport { nF } from '../misc';\n\nconst mandatory = [\n  {\n    key: `Tower Little Girl talk`,\n    magic: 1,\n    military: 0,\n    price: 0,\n  },\n  {\n    key: `Deluxe Givini Dragon Statue`,\n    magic: 1,\n    military: 0,\n    price: 5000,\n  },\n  {\n    key: `HQ Shrine`,\n    magic: 1,\n    military: 0,\n    price: 5000,\n  },\n  {\n    key: `Orc Lab Upgrade`,\n    magic: 2,\n    military: 5,\n    price: 25000,\n  },\n  {\n    key: `Magical Shielding Upgrade`,\n    magic: 5,\n    military: 0,\n    price: 100000,\n  },\n];\n\nconst defense = [\n  {\n    key: `Research: Base Defense`,\n    military: 5,\n    magic: 10,\n    price: 0,\n  },\n];\n\nconst subsitute = [\n  {\n    key: `Wynn's Shield Upgrade`,\n    magic: 5,\n    military: 0,\n    price: 100000,\n  },\n  {\n    key: `Extradimensional Foundation`,\n    magic: 5,\n    military: 5,\n    price: 225000,\n  },\n];\n\nconst plus = [\n  {\n    key: `Armory Upgrade`,\n    military: 5,\n    magic: 0,\n    price: 10000,\n  },\n  {\n    key: `Orc Guard Posts`,\n    military: 3,\n    magic: 0,\n    price: 5000,\n  },\n  {\n    key: `Supplies Upgrade`,\n    military: 2,\n    magic: 0,\n    price: 10000,\n  },\n];\n\nconst renderPlus = (number) => `+${number}`;\n\nconst columns = [\n  {\n    title: `Upgrade`,\n    dataIndex: 'key',\n  },\n  {\n    title: `Price`,\n    dataIndex: 'price',\n    render: (number) => nF(number),\n    sorter: (a, b) => a.price - b.price,\n  },\n  {\n    title: `Magic`,\n    dataIndex: 'magic',\n    render: renderPlus,\n    sorter: (a, b) => a.magic - b.magic,\n  },\n  {\n    title: `Military`,\n    dataIndex: 'military',\n    render: renderPlus,\n    sorter: (a, b) => a.military - b.military,\n  },\n];\n\nconst dataSource = ({ research, extra }) =>\n  [mandatory, research === 'defense' ? defense : subsitute, extra && plus]\n    .filter(Boolean)\n    .flat(1);\n\nconst sum = (list, key) => list.reduce((acc, data) => acc + data[key], 0);\n\nexport const price = (params) => sum(dataSource(params), 'price');\n\nconst Headquarters = ({ research, extra }) => {\n  const source = dataSource({ research, extra });\n\n  return (\n    <div className=\"headquarters-upgrades\">\n      <Table\n        dataSource={source}\n        columns={columns}\n        pagination={false}\n        summary={() => {\n          return (\n            <Table.Summary.Row>\n              <Table.Summary.Cell>{`Total`}</Table.Summary.Cell>\n              <Table.Summary.Cell>\n                {nF(sum(source, 'price'))}\n              </Table.Summary.Cell>\n              <Table.Summary.Cell>{sum(source, 'magic')}</Table.Summary.Cell>\n              <Table.Summary.Cell>{sum(source, 'military')}</Table.Summary.Cell>\n            </Table.Summary.Row>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Headquarters;\n","import { useState } from 'react';\nimport { Form, Button, Card, Select } from 'antd';\nimport Headquarters, { price as headquartersPrice } from './Headquarters';\nimport { nF } from '../misc';\nimport allInvestments from '../data/investments';\nimport Banned from '../components/form/Banned';\n\nconst initialValues = {\n  merchantSolution2: 'neutral',\n  headquarters: 'enough',\n  orcCouncil: 0.8,\n  mandatory: [],\n  banned: [],\n};\n\nconst CustomForm = ({\n  onFinish,\n  loading,\n  firstRoundDecisions,\n  purchasedInvestments,\n}) => {\n  const [form] = Form.useForm();\n\n  const [militaryExtra, setMilitaryExtra] = useState(\n    initialValues.headquarters === 'extra'\n  );\n  const [mandatory, setMandatory] = useState(initialValues.mandatory);\n\n  const previousResearch = firstRoundDecisions.research;\n\n  return (\n    <Form\n      initialValues={initialValues}\n      onFinish={onFinish}\n      className=\"round-form second-round-form\"\n      form={form}\n      onValuesChange={(_, allValues) => {\n        setMilitaryExtra(allValues.headquarters === 'extra');\n        setMandatory(allValues.mandatory);\n      }}\n    >\n      <Card title={`Stategy`} type=\"inner\">\n        <div className=\"two-columns\">\n          <div>\n            {firstRoundDecisions.merchantSolution === 'wait' && (\n              <Form.Item label={`Merchant dispute`} name=\"merchantSolution2\">\n                <Select\n                  options={[\n                    {\n                      value: 'neutral',\n                      label: `Neutral compromise (force Social ≥ 40)`,\n                    },\n                    {\n                      value: 'givini',\n                      label: `Favor New Givini`,\n                    },\n                    {\n                      value: 'wait',\n                      label: `Wait`,\n                    },\n                  ]}\n                />\n              </Form.Item>\n            )}\n            <Form.Item name=\"orcCouncil\" label={`Orc council`}>\n              <Select\n                options={[\n                  {\n                    label: `Substantial majority (≥ 65%)`,\n                    value: 0.65,\n                  },\n                  {\n                    label: `Overwhelming majority (≥ 80%)`,\n                    value: 0.8,\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item name=\"headquarters\" label={`Headquarters`}>\n              <Select\n                options={[\n                  {\n                    label: `Pay ${nF(\n                      headquartersPrice({ research: previousResearch })\n                    )} for strong magical defenses.`,\n                    value: 'enough',\n                  },\n                  {\n                    label: `Pay ${nF(\n                      headquartersPrice({\n                        research: previousResearch,\n                        extra: true,\n                      })\n                    )} for strong magical and military defenses.`,\n                    value: 'extra',\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item\n              label={`Investments you explicitly want to buy now (example: Airships)`}\n              name=\"mandatory\"\n            >\n              <Select\n                options={allInvestments\n                  .filter(({ name }) => !purchasedInvestments.includes(name))\n                  .map(({ name }) => {\n                    return { label: name, value: name };\n                  })}\n                mode=\"multiple\"\n              />\n            </Form.Item>\n            <Banned mandatory={mandatory} form={form} />\n          </div>\n          <Headquarters research={previousResearch} extra={militaryExtra} />\n        </div>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {`Submit`}\n          </Button>\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n};\n\nexport default CustomForm;\n","import Addition from '../../results/Addition';\nimport { roundTwoChanges } from '../../data/givini';\n\nconst Givini = ({\n  startingValue,\n  roundTwoInvestments = [],\n  decisions = {},\n}) => {\n  return (\n    <Addition\n      startingValue={startingValue}\n      dataSources={[\n        {\n          title: `Investments`,\n          dataSource: roundTwoInvestments\n            .filter(({ givini = 0 }) => givini !== 0)\n            .map(({ name, givini }) => {\n              return { label: name, values: [givini] };\n            })\n            .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n        },\n        {\n          title: `Other changes`,\n          dataSource: roundTwoChanges(decisions),\n        },\n      ]}\n    />\n  );\n};\n\nexport default Givini;\n","import Addition from '../../results/Addition';\nimport { roundTwoChanges, council } from '../../data/takkan';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst Takkan = ({\n  startingValue,\n  roundTwoInvestments = [],\n  decisions = {},\n  roundOneResearch,\n  previousInvestments = [],\n  takkanScore,\n}) => {\n  const councilResult = council({\n    researches: [roundOneResearch],\n    investments: [\n      ...previousInvestments,\n      ...roundTwoInvestments.map(({ name }) => name),\n    ],\n    takkan: takkanScore,\n  });\n\n  return (\n    <>\n      <Addition\n        startingValue={startingValue}\n        dataSources={[\n          {\n            title: `Investments`,\n            dataSource: roundTwoInvestments\n              .filter(({ takkan = 0 }) => takkan !== 0)\n              .map(({ name, takkan }) => {\n                return { label: name, values: [takkan] };\n              })\n              .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n          },\n          {\n            title: `Other changes`,\n            dataSource: roundTwoChanges(decisions),\n          },\n        ]}\n      />\n      <Text>\n        {`Orc council: `}\n        <Text type={councilResult >= 0.8 ? 'success' : 'warning'}>\n          {(councilResult * 100).toFixed(2)}\n          {`%`}\n        </Text>\n      </Text>\n    </>\n  );\n};\n\nexport default Takkan;\n","import Ledger from '../../results/Ledger';\nimport { Card } from 'antd';\nimport Givini from './Givini';\nimport Takkan from './Takkan';\n\nconst Result = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n  decisions,\n  roundOneDecisions,\n}) => {\n  return (\n    <Card title={`Changes`} className=\"results\">\n      <Ledger\n        initialStandings={initialStandings}\n        nonInvestmentChanges={nonInvestmentChanges}\n        investmentChanges={investmentChanges}\n      />\n      <div>\n        <Card title={`New Givini`} type=\"inner\">\n          <Givini\n            startingValue={initialStandings.givini}\n            roundTwoInvestments={investmentChanges.investments}\n            decisions={decisions}\n          />\n        </Card>\n        <Card title={`Tak'Kan`} type=\"inner\">\n          <Takkan\n            startingValue={initialStandings.takkan}\n            roundTwoInvestments={investmentChanges.investments}\n            decisions={decisions}\n            takkanScore={initialStandings.takkan + investmentChanges.takkan}\n            roundOneResearch={roundOneDecisions.research}\n            previousInvestments={initialStandings.investments}\n          />\n        </Card>\n      </div>\n    </Card>\n  );\n};\n\nexport default Result;\n","import Form from './Form';\nimport { buildFinalStandings } from '../misc';\nimport Result from './results';\nimport { roundTwoValue as giviniRoundTwoValue } from '../data/givini';\nimport { price as headquartersPrice } from './Headquarters';\nimport { roundTwoValue as takkanRoundTwoValue } from '../data/takkan';\nimport { Typography } from 'antd';\nimport { useEffect, useRef } from 'react';\n\nconst { Title } = Typography;\n\nconst socialRequirement = (initialSocial, decisions) => {\n  if (decisions.merchantSolution2 === 'neutral' && initialSocial < 40) {\n    return 40 - initialSocial;\n  }\n\n  return 0;\n};\n\nconst onFinish = async ({\n  setResult,\n  runInWoker,\n  setError,\n  firstRoundResult,\n  values,\n}) => {\n  const { finalStandings: initialStandings, misc } = firstRoundResult;\n\n  const { merchantSolution2, headquarters, orcCouncil, mandatory, banned } =\n    values;\n  const decisions = { merchantSolution2, headquarters, orcCouncil };\n\n  const headquartersUpgradesPrice = headquartersPrice({\n    research: firstRoundResult.decisions.research,\n    extra: decisions.headquarters === 'extra',\n  });\n\n  const nonInvestmentChanges = {\n    money: -headquartersUpgradesPrice,\n    profits: 0,\n    social: 0,\n    givini: giviniRoundTwoValue(decisions),\n    takkan: takkanRoundTwoValue(),\n    list: [\n      {\n        name: `Headquarters upgrades`,\n        price: -headquartersUpgradesPrice,\n      },\n    ],\n  };\n\n  const params = {\n    ...misc,\n    previousInvestments: initialStandings.investments,\n    money:\n      initialStandings.money +\n      initialStandings.profits -\n      headquartersUpgradesPrice,\n    giviniStart: initialStandings.givini,\n    giviniExtra: nonInvestmentChanges.givini,\n    takkan: initialStandings.takkan,\n    completedResearch: [firstRoundResult.decisions.research],\n    otherRequirements: {\n      social: socialRequirement(initialStandings.social, decisions),\n      orcCouncil: decisions.orcCouncil,\n      mandatory,\n      banned,\n    },\n  };\n\n  const result = await runInWoker(params);\n\n  if (!result) {\n    setResult(undefined);\n    setError(\n      `Couldn't find a working combination of investments for that strategy with these starting values, sorry.`\n    );\n    return;\n  }\n\n  const investmentChanges = { ...result, money: -result.price };\n\n  setResult({\n    initialStandings,\n    decisions,\n    nonInvestmentChanges,\n    investmentChanges,\n    finalStandings: buildFinalStandings({\n      initialStandings,\n      nonInvestmentChanges,\n      investmentChanges,\n    }),\n    misc,\n  });\n  setError(undefined);\n};\n\nconst SecondRound = ({\n  runInWoker,\n  loading,\n  result,\n  setResult,\n  setError,\n  firstRoundResult,\n}) => {\n  const resultRef = useRef(null);\n  useEffect(() => {\n    if (!result || !resultRef.current) {\n      return;\n    }\n    resultRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, [result, resultRef]);\n\n  return (\n    <div className=\"round-two\">\n      <Title level={2}>{`Chapter 4 – Round 2`}</Title>\n      <Form\n        onFinish={(values) => {\n          onFinish({\n            setResult,\n            runInWoker,\n            setError,\n            firstRoundResult,\n            values,\n          });\n        }}\n        loading={loading}\n        firstRoundDecisions={firstRoundResult.decisions}\n        purchasedInvestments={firstRoundResult.finalStandings.investments}\n      />\n      {result && (\n        <div ref={resultRef}>\n          <Result roundOneDecisions={firstRoundResult.decisions} {...result} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SecondRound;\n","import './App.css';\nimport FirstRound from './first-round';\nimport { useEffect, useState } from 'react';\nimport worker from 'workerize-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport Disclaimer from './Disclaimer';\nimport Loading from './Loading';\nimport Failure from './Failure';\nimport SecondRound from './second-round';\n\nlet dumbCache = {};\nconst dumbKey = (params) => JSON.stringify(params);\n\nconst buildRunInWorker =\n  ({\n    workerInstance,\n    setLoading,\n    setCombinationsCount,\n    setProgress,\n    setInvestmentsCount,\n    setPreprogress,\n  }) =>\n  async (params) => {\n    const cacheKey = dumbKey(params);\n    if (!!dumbCache[cacheKey]) {\n      return dumbCache[cacheKey];\n    }\n\n    setLoading(true);\n\n    const investmentsCount = await workerInstance.prepare(params);\n    setInvestmentsCount(investmentsCount);\n    setPreprogress(0);\n    let combinationsCount = 0;\n    for (let i = 0; i <= investmentsCount; i++) {\n      combinationsCount += await workerInstance.preprocess();\n      setPreprogress(i / investmentsCount);\n    }\n\n    setCombinationsCount(combinationsCount);\n    setProgress(0);\n    const batchSize = 10000;\n    let result;\n    for (let i = 0; i < Math.ceil(combinationsCount / batchSize); i++) {\n      const end = Math.min((i + 1) * batchSize, combinationsCount);\n      result = await workerInstance.process(i * batchSize, end);\n      setProgress(end / combinationsCount);\n    }\n\n    await workerInstance.clean();\n\n    setLoading(false);\n    setCombinationsCount(undefined);\n    setInvestmentsCount(undefined);\n    setProgress(0);\n    setPreprogress(0);\n\n    dumbCache[cacheKey] = result;\n\n    return result;\n  };\n\nconst App = () => {\n  const [workerInstance, setWorkerInstance] = useState();\n  const [loading, setLoading] = useState(false);\n  const [combinationsCount, setCombinationsCount] = useState();\n  const [progress, setProgress] = useState(0);\n  const [investmentsCount, setInvestmentsCount] = useState();\n  const [preprogress, setPreprogress] = useState(0);\n\n  const [firstRoundResult, setFirstRoundResult] = useState();\n  const [secondRoundResult, setSecondRoundResult] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    if (!workerInstance) {\n      setWorkerInstance(worker());\n    }\n\n    return () => {\n      workerInstance?.terminate();\n    };\n  }, [workerInstance]);\n\n  if (!workerInstance) {\n    return null;\n  }\n\n  const runInWoker = buildRunInWorker({\n    workerInstance,\n    setLoading,\n    setCombinationsCount,\n    setProgress,\n    setInvestmentsCount,\n    setPreprogress,\n  });\n\n  const abort = async () => {\n    workerInstance.terminate();\n\n    const newWorkerInstance = worker();\n    await newWorkerInstance.clean();\n\n    setWorkerInstance(newWorkerInstance);\n\n    setCombinationsCount(undefined);\n    setInvestmentsCount(undefined);\n    setProgress(0);\n    setPreprogress(0);\n\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Disclaimer />\n      <FirstRound\n        runInWoker={runInWoker}\n        loading={loading}\n        result={firstRoundResult}\n        setResult={(data) => {\n          setSecondRoundResult(undefined);\n          setFirstRoundResult(data);\n        }}\n        setError={(error) => {\n          setSecondRoundResult(undefined);\n          setError(error);\n        }}\n      />\n      {firstRoundResult && (\n        <SecondRound\n          runInWoker={runInWoker}\n          loading={loading}\n          result={secondRoundResult}\n          setResult={setSecondRoundResult}\n          setError={setError}\n          firstRoundResult={firstRoundResult}\n        />\n      )}\n      {loading && (\n        <Loading\n          combinationsCount={combinationsCount}\n          progress={progress}\n          preprogress={preprogress}\n          investmentsCount={investmentsCount}\n          abort={abort}\n        />\n      )}\n      {error && <Failure message={error} />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}